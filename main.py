"""
COMMIT 2: Mejora visual con tablas Rich
Tablas profesionales para mostrar pa√≠ses y estad√≠sticas
"""

from rich.console import Console
from rich.panel import Panel
from rich.table import Table
import funciones

console = Console()

def mostrar_encabezado():
    """Muestra el encabezado bonito del sistema"""
    console.clear()
    console.print(Panel.fit(
        "üéØ [bold cyan]GESTI√ìN DE DATOS DE PA√çSES[/bold cyan]",
        subtitle="[bold green]TPI - Programaci√≥n 1[/bold green]",
        style="bold magenta"
    ))

def mostrar_menu_principal():
    """COMMIT 2: Men√∫ principal mejorado"""
    mostrar_encabezado()
    
    console.print("[bold]Opciones disponibles:[/bold]")
    console.print("1. üîç Buscar pa√≠s en API y guardar")
    console.print("2. üìã Buscar pa√≠ses en local")
    console.print("3. üìä Ver estad√≠sticas")
    console.print("4. üö™ Salir")
    console.print()

def mostrar_paises_rich(paises, titulo="LISTA DE PA√çSES"):
    """COMMIT 2: Mostrar pa√≠ses con tabla Rich profesional"""
    if not paises:
        console.print("[red]‚ùå No hay pa√≠ses para mostrar[/red]")
        return
        
    table = Table(title=f"üìã {titulo} - {len(paises)} pa√≠ses")
    table.add_column("Pa√≠s", style="cyan", no_wrap=True)
    table.add_column("Poblaci√≥n", style="green", justify="right")
    table.add_column("Superficie", style="blue", justify="right") 
    table.add_column("Continente", style="magenta")
    
    # Mostrar m√°ximo 15 pa√≠ses para no saturar
    for pais in paises[:15]:
        table.add_row(
            pais['nombre'],
            f"{pais['poblacion']:,}",
            f"{pais['superficie']:,} km¬≤",
            pais['continente']
        )
    
    console.print(table)
    
    # Mostrar advertencia si hay m√°s pa√≠ses
    if len(paises) > 15:
        console.print(f"[dim]... y {len(paises) - 15} pa√≠ses m√°s (use filtros para ver m√°s)[/dim]")

def mostrar_estadisticas_rich(stats, total_paises):
    """COMMIT 2: Mostrar estad√≠sticas con formato Rich profesional"""
    if not stats["mayor_poblacion"]:
        console.print("[yellow]‚ö†Ô∏è No hay datos para mostrar estad√≠sticas[/yellow]")
        return
        
    console.print(Panel("üìä [bold cyan]ESTAD√çSTICAS GLOBALES[/bold cyan]"))
    
    # Tabla de estad√≠sticas principales
    stats_table = Table(show_header=False, style="bold", width=60)
    stats_table.add_column("M√©trica", style="cyan", width=25)
    stats_table.add_column("Valor", style="white")
    
    stats_table.add_row("Total de pa√≠ses", f"[green]{total_paises}[/green]")
    stats_table.add_row("Pa√≠s m√°s poblado", 
                       f"[red]{stats['mayor_poblacion']['nombre']}[/red] ({stats['mayor_poblacion']['poblacion']:,})")
    stats_table.add_row("Pa√≠s menos poblado", 
                       f"[green]{stats['menor_poblacion']['nombre']}[/green] ({stats['menor_poblacion']['poblacion']:,})")
    stats_table.add_row("Poblaci√≥n promedio", f"[yellow]{stats['promedio_poblacion']:,.0f} hab[/yellow]")
    stats_table.add_row("Superficie promedio", f"[blue]{stats['promedio_superficie']:,.0f} km¬≤[/blue]")
    
    console.print(stats_table)
    
    # Tabla de pa√≠ses por continente
    if stats["cantidad_por_continente"]:
        console.print(Panel("üåç [bold cyan]DISTRIBUCI√ìN POR CONTINENTE[/bold cyan]"))
        
        cont_table = Table(show_header=True, header_style="bold yellow")
        cont_table.add_column("Continente", style="magenta")
        cont_table.add_column("Cantidad", style="green", justify="center")
        cont_table.add_column("Porcentaje", style="blue", justify="center")
        
        for cont, cant in stats["cantidad_por_continente"].items():
            porcentaje = (cant / total_paises) * 100
            cont_table.add_row(
                cont,
                f"{cant} pa√≠ses",
                f"{porcentaje:.1f}%"
            )
        
        console.print(cont_table)

def main():
    """Funci√≥n principal - Versi√≥n mejorada con tablas Rich"""
    # Inicializar el archivo CSV
    funciones.inicializar_csv()
    
    while True:
        try:
            mostrar_menu_principal()
            opcion = input("Seleccione una opci√≥n: ")
            
            if opcion == "1":
                console.print(Panel("üîç [bold yellow]BUSCAR EN API[/bold yellow]"))
                nombre = input("Ingrese nombre del pa√≠s: ").strip()
                if nombre:
                    funciones.getPais(nombre)
                else:
                    console.print("[red]‚ùå Debe ingresar un nombre[/red]")
                    
            elif opcion == "2":
                console.print(Panel("üìã [bold yellow]BUSCAR EN LOCAL[/bold yellow]"))
                termino = input("T√©rmino de b√∫squeda: ").strip()
                paises = funciones.cargar_paises_csv()
                resultados = funciones.buscar_pais_local(paises, termino)
                # Mostrar resultados con Rich (nuevo)
                mostrar_paises_rich(resultados, f"Resultados para: '{termino}'")
                
            elif opcion == "3":
                console.print(Panel("üìä [bold yellow]ESTAD√çSTICAS[/bold yellow]"))
                paises = funciones.cargar_paises_csv()
                stats = funciones.estadisticas(paises)
                # Mostrar stats con Rich (nuevo)
                mostrar_estadisticas_rich(stats, len(paises))
                    
            elif opcion == "4":
                console.print(Panel.fit("[green]¬°Gracias por usar el sistema! üëã[/green]", style="bold green"))
                break
            else:
                console.print("[red]‚ùå Opci√≥n inv√°lida[/red]")
            
            input("\n‚èé Presione Enter para continuar...")
            
        except KeyboardInterrupt:
            console.print("\n\n[yellow]‚ö†Ô∏è Programa interrumpido por el usuario[/yellow]")
            break
        except Exception as e:
            console.print(f"[red]‚ùå Error inesperado: {e}[/red]")
            input("\n‚èé Presione Enter para continuar...")

if __name__ == "__main__":
    main()